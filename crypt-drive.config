#!/bin/sh
#
# This script will unlock multiple drives encrypted with luks
# All the drives must be unlockable with one single key
# The key must be contained within a password protected luks partition
#
# The script will mount the luks partition containing the key
# Then it will unlock all the disks
# Then it will mount all the disks
#
# Each disk in $device_list will be unlocked to /dev/mapper/${device_name}-drive${n}-layer${m}
# With $n being the n-th disk unlocked
# With $m being the m-th luks layer
# Filesystem will be mounted to ${mount_dir}/drive${n}

# The directory where everything will be mounted
mount_dir='/mnt/crypt'
# Mount parameters for all drives
mount_param=''
# Mount type
# mount_type='multi' to have each drive mounted to ${mount_dir}/drive${n}
# mount_type='single' to have only the first drive to be mounted (useful for BTRFS)
# mount_type='none' to have no drive mounted at all
mount_type='multi'
# Override which drive to be mounted in single mode
mount_single_override=''
# Override mount directory the drive will be mounted to (default is ${mount_dir}/data)
mount_single_dir_override=''

# The file or device containing the luks partition with the key file
# Example: /dev/sdb1 or /path/to/file
keyfile_partition='/var/tmp/dk'
# Key partition mount parameters
usb_mount_param='-o ro'
# Override key file path
# Default key file path is "${mount_dir}/key/key-${device_name}-level${n}.key" for the n-th level of encryption
keyfile_path_override=''

# List of encrypted devices to unlock, space separated
device_list='/tmp/disk1 /tmp/disk2'

# Device name to use for /dev/mapper
device_name="crypt"

# How many encryption layer
luks_level=1

# Merge filesystem with mergerfs
# Functionnality NOT TESTED
merge=0 # Boolean to enable mergerfs
merge_mount_dir='/mnt/crypt/merger'
# MergerFS mount options
merger_mount_param=''
